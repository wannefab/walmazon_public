/*



create table role (
    id bigint generated by default as identity,
    name varchar(50) not null,
    primary key (id)
);

create table user (
    id bigint generated by default as identity,
    title varchar(10) not null,
    first_name varchar(50) not null,
    last_name varchar(50) not null,
    address varchar(100) not null,
    city varchar(50) not null,
    birth_date timestamp not null,
    username varchar(50) not null unique,
    email varchar(100) not null unique,
    password varchar(76) not null,
    date_created timestamp not null,
    primary key (id)
);

create table product (
    id bigint generated by default as identity,
    name varchar(80) not null,
    description varchar(120) not null,
    tags varchar(120),
    specifications varchar not null,
    price double not null,
    number_in_stock INTEGER not null,
    images varchar not null,
    external_links varchar(100) not null,
    date_updated timestamp not null,
    primary key (id)
);

create table review (
    id bigint generated by default as identity,
    text varchar(260) not null,
    rating INT not null,
    date_created timestamp not null,
    user_id bigint not null,
    product_id bigint not null,
    CONSTRAINT fk1 FOREIGN KEY(user_id) REFERENCES user(id),
  	CONSTRAINT fk2 FOREIGN KEY(product_id) REFERENCES product(id),
    primary key (id)
);


create table purchase (
    id bigint generated by default as identity,
    status varchar(20) not null,
    quantity int not null,
    date_created timestamp not null,
    user_id bigint not null,
    product_id bigint not null,
    CONSTRAINT fk6 FOREIGN KEY(user_id) REFERENCES user(id),
  	CONSTRAINT fk7 FOREIGN KEY(product_id) REFERENCES product(id),
    primary key (id)
);


create table token (
    user_id bigint not null,
    token varchar(76) not null,
    date_created timestamp not null,
    CONSTRAINT fk5 FOREIGN KEY(user_id) REFERENCES user(id),
    primary key (token)
);

create table user_role (
   user_id bigint not null,
   roles_id bigint not null,
   CONSTRAINT fk3 FOREIGN KEY(user_id) REFERENCES user(id),
   CONSTRAINT fk4 FOREIGN KEY(roles_id) REFERENCES role(id),
   primary key (user_id, roles_id )
);


*/